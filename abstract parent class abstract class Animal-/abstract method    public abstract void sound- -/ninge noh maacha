//abstract parent class
abstract class Animal{
   //abstract method
   public abstract void sound();
}
//Dog class extends Animal class
public class Dog extends Animal{

   public void sound(){
	System.out.println("Woof");
   }
   public static void main(String args[]){
	Animal obj = new Dog();
	obj.sound();
   }
}
-------------------------------------------------------
class NoteBook{
   /*This is default constructor. A constructor does
    * not have a return type and it's name
    * should exactly match with class name
    */
   NoteBook(){
      System.out.println("Default constructor");
   }
   public void mymethod()
   {
      System.out.println("Void method of the class");
   }
   public static void main(String args[]){
	/* new keyword creates the object of the class
         * and invokes constructor to initialize object
         */
	NoteBook obj = new NoteBook();
	obj.mymethod();
   }
}
-------------------------------------------------------------------\
class Example{
   
   Example(){
      System.out.println("Default constructor");
   }
   
   Example(int i, int j){
      System.out.println("constructor with Two parameters");
   }
   
   Example(int i, int j, int k){
      System.out.println("constructor with Three parameters");	      
   }
	   
   
   Example(int i, String name){
      System.out.println("constructor with int and String param");
   }
   public static void main(String args[]){
     
      Example obj = new Example();
      Example obj2 = new Example(12, 12);
      Example obj3 = new Example(1, 2, 13);
      Example obj4 = new Example(1,"BeginnersBook");
   }
}
-----------------------------------------------------------------------------

